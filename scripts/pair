#!/usr/bin/env ruby

# Configures the git author to a list of developers when pair programming
#
# Updated by Matt Gauger to work more like hitch.
#
# Usage: pair mathias devn (Sets the author to 'Devin Walters and Matt Gauger')
#        pair              (Unsets the author so the git global config takes effect)
#
# You may also set more than two users in the pair:
#        pair bigtiger devn mathias (Sets the author to 'Jim Remsik, Devin Walters and Matt Gauger')
#
# Author: Bryan Helmkamp (http://brynary.com)
# http://www.brynary.com/2008/9/1/setting-the-git-commit-author-to-pair-programmers-names

#######################################################################
## Configuration

pair_email_username = 'dev'
pair_email_domain = 'bendyworks.com'

AUTHORS = {

  # Bendyworkers:
  'begriffs' => 'Joe Nelson',
  'bendycode' => 'Stephen Anderson',
  'bigtiger' => 'Jim Remsik',
  'devn' => 'Devin Walters',
  'jaym3s' => 'Jaymes Waters',
  'listrophy' => 'Bradley Grzesiak',
  'mathias' => 'Matt Gauger',
  'randland' => 'Nick Karpenske',
  'ryalnd' => 'Ryland Herrick',
  'twopoint718' => 'Chris Wilson',

  # Getty folks:
  'jcarley' => 'Jeff Carley',

  # Murfie folks:
  'angelic' => 'Angel N. Sciortino',
  'glynnis' => 'Glynnis Ritchie',

  # Relevance folks:
  'jdpace' => 'Jared Pace'
}

## End of configuration
#######################################################################

unless File.exists?(".git")
  puts "This doesn't look like a git repository."
  exit 1
end

args = ARGV.sort

authors = args.map do |username|
  if AUTHORS[username.downcase]
    AUTHORS[username.downcase]
  else
    puts "Couldn't find author name for Github username: #{username}"
    exit 1
  end
end

if authors.any?
  if authors.size > 2
    names = "#{authors[0..-2].join(", ")} and #{authors.last}"
  else
    names = authors.join(' and ')
  end

  initials = args.join('/')

  pair_email = pair_email_username + '+' + args.join('+') + '@' + pair_email_domain

  `git config user.name '#{names}'`
  `git config user.initials '#{initials}'`
  `git config user.email '#{pair_email}'`

  puts "user.name = #{names}"
  puts "user.initials = #{initials}"
  puts "user.email = #{pair_email}"
else
  `git config --unset user.name`
  `git config --unset user.initials`
  `git config --unset user.email`

  puts "Unset user.name, user.initials, and user.email"
end
